@use "sass:color";

@use "../../functions" as fn;
@use "../colors.module" as colors;
@use "./typography.module" as typography;

$feedback-types: ("warning", "error", "success");

$global-feedback-border-radius: 4px;
$global-feedback-font-family: fn.map-get(typography.$typography-font-families, "body");
$global-feedback-font-size: typography.get-font-size("body", 1);
$global-feedback-font-weight: typography.get-font-weight("body", $font-weight-name: "bold");
$global-feedback-height: 56px;
$global-feedback-padding: 16px;
$global-feedback-line-height: $global-feedback-height - 2 * $global-feedback-padding;

@mixin global-feedback-typography {
  font-family: $global-feedback-font-family;
  font-size: $global-feedback-font-size;
  font-weight: $global-feedback-font-weight;
  line-height: $global-feedback-line-height;
}

$success-border-color: #219653;
$success-color: colors.$brand-dark-green;

// $success-hover-color: color.adjust($success-color, $lightness: -30%);
$success-bg-color: color.change($success-border-color, $alpha: 0.05);
$success-input-border-color: colors.$brand-green;
$success-icon-color: $success-color;

$error-color: #ed4e69;
$error-border-color: #eb5757;
$error-bg-color: #fef6f6;
$error-icon-color: $error-color;
$error-input-border-color: colors.$red;

$warning-input-border-color: #e0b223;
$warning-border-color: #e0b223;
$warning-color: colors.$text-grey;
$warning-bg-color: #fffbec;
$warning-icon-color: $warning-border-color;

$feedback-input-border-colors: (
  "warning": $warning-input-border-color,
  "error": $error-input-border-color,
  "success": $success-input-border-color,
);

$feedback-border-colors: (
  "warning": $warning-border-color,
  "error": $error-border-color,
  "success": $success-border-color,
);

$feedback-colors: (
  "warning": $warning-color,
  "error": $error-color,
  "success": $success-color,
);

// The Design Comps do not include hovered or focused variations for colors that might be used in
// a button or other clickable element - so the adjustment here is an educated guess.
@function feedback-hover-focused-color($type) {
  $type: fn.validate-value($type, $feedback-types);
  @return color.adjust(fn.map-get($feedback-colors, $type), $lightness: -10%);
}

$feedback-icon-colors: (
  "warning": $warning-icon-color,
  "error": $error-icon-color,
  "success": $success-icon-color,
);

$feedback-bg-colors: (
  "warning": $warning-bg-color,
  "error": $error-bg-color,
  "success": $success-bg-color,
);

@mixin with-feedback-types() {
  @each $feedback in $feedback-types {
    $data: (
      "input-border-color": fn.map-get($feedback-input-border-colors, $feedback),
      "border-color": fn.map-get($feedback-border-colors, $feedback),
      "background-color": fn.map-get($feedback-bg-colors, $feedback),
      "color": fn.map-get($feedback-colors, $feedback),
      "icon-color": fn.map-get($feedback-icon-colors, $feedback),
      "hover-color": feedback-hover-focused-color($feedback),
      "focus-color": feedback-hover-focused-color($feedback),
    );
    @content ($feedback, $data);
  }
}

/* ========================================== Exports =========================================== */
:export {
  errorBgColor: $error-bg-color;
  errorBorderColor: $error-border-color;
  errorColor: $error-color;
  errorInputBorderColor: $error-input-border-color;
  successBgColor: $success-bg-color;
  successBorderColor: $success-border-color;
  successColor: $success-color;
  successInputBorderColor: $success-input-border-color;
  warningBgColor: $warning-bg-color;
  warningBorderColor: $warning-border-color;
  warningColor: $warning-color;
  warningInputBorderColor: $warning-input-border-color;
}
