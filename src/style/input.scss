@import "react-datepicker/dist/react-datepicker.css";

// This is to get rid of the blue-background that Chrome sometimes sets on
// auto-fill fields.
button:-webkit-autofill,
button:-webkit-autofill:hover,
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input.ant-input:-webkit-autofill,
input.ant-input:-webkit-autofill:hover,
input.ant-input:-webkit-autofill:focus,
.ant-input-number-focused,
.ant-input-number:-webkit-autofill,
.ant-input-number:-webkit-autofill:hover,
.ant-input-number:-webkit-autofill:focus,
.ant-input-number .ant-input-number-input-wrap:-webkit-autofill,
.ant-input-number .ant-input-number-input-wrap:-webkit-autofill:hover,
.ant-input-number .ant-input-number-input-wrap:-webkit-autofill:focus,
.ant-input-number .ant-input-number-input-wrap input:-webkit-autofill,
.ant-input-number .ant-input-number-input-wrap input:-webkit-autofill:hover,
.ant-input-number .ant-input-number-input-wrap input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
input:focus,
textarea:focus,
.ant-input-affix-wrapper:focus,
.ant-input-affix-wrapper-focused,
select:-webkit-autofill:focus {
  box-shadow: 0 0 0px 1000px $gray-light inset !important;
  -webkit-box-shadow: 0 0 0px 1000px $gray-light inset !important;
}

.ant-checkbox-checked::after {
  border: none !important;
}

.checkbox-wrapper {
  padding: 10px;
  .ant-checkbox-wrapper {
    height: 16px;
    width: 16px;

    .ant-checkbox {
      font-size: 16px;
      line-height: 1;
      display: block;
      top: 0;
    }
  }
}

@mixin input_framework(
  $horizontal-padding: 12px,
  $svg-height: 0.8rem,
  $font-size: 12px,
  $size: $standard-size,
  $radius: $input-border-radius,
  $vertical-padding: 4px
) {
  line-height: ($size - 2 * $vertical-padding) !important;
  font-size: $font-size !important;
  padding: $vertical-padding $horizontal-padding;
  border-radius: $radius !important;
  .ant-input-prefix {
    font-size: $font-size;

    svg {
      height: $svg-height;
    }
  }
}

@mixin input_size_standard() {
  @include input_framework();
  @include standard_height_variants();

  &.large,
  &.xlarge {
    @include input_framework(12px, 0.9rem, 13px, $large-size, $input-border-radius);
  }

  &.standard {
    @include input_framework();
  }

  &.medium {
    @include input_framework(8px, 0.7rem, 12px, $medium-size, $input-small-border-radius);
  }

  &.small,
  &.xsmall {
    @include input_framework(8px, 0.7rem, 12px, $small-size, $input-small-border-radius);
  }
}

// This class is not meant to be used in the components.
.input-base {
  @include transition(none);
  border: none;
  background-color: $gray-light !important;
  color: $text-primary !important;
  cursor: text;
  position: relative;
  box-sizing: border-box;
  align-items: center;
  font-variant: tabular-nums;
  list-style: none;
  font-feature-settings: "tnum";
  font-family: $avenir;
  font-weight: 500;
  width: 100%;
  box-shadow: none !important;
  margin: 0;
  min-width: 0;
  background-image: none !important;

  &:hover,
  &:focus {
    border-color: transparent !important;
    box-shadow: none !important;
  }
}

input:-webkit-autofill::first-line {
  font-size: 12px;
  color: $text-primary !important;
  font-family: $avenir;
  font-weight: 500;
  width: 100%;
  line-height: 16px;
}

input:focus-visible {
  outline: none !important;
}

.ant-input:hover {
  border-color: $transparent !important;
}

.input {
  @extend .input-base;
  @include input_size_standard();
}

// The generic `input` class is applied to the wrapping component.  The actual
// HTML <input> element does not have this class applied and is a child of this
// wrapping component.
span.input {
  @extend .input-base;
  @include input_size_standard();

  .ant-input-prefix {
    margin-right: 10px;
    svg {
      color: #c6c6c6;
    }
  }

  > input {
    @extend .input-base;
    font-size: inherit !important;
    height: 100%;
    border-radius: 0px !important;
    line-height: inherit !important;
  }
}

// For purposes of wrapping a raw HTML <input> element and looking like a styled
// <Input> component, when we cannot use the <Input> component.  Currently, this is
// only used for the <InputOnFocus> component.
.input-div {
  @extend .input;

  input {
    @extend .input-base;
    height: 100%;
  }

  // Tightly wraps the component that is rendered on blur such that a click inside
  // of `input-div-content` (i.e. the component that is rendered on blur) can have
  // it's propogation stopped.  This is required to allow clickable elements to
  // be rendered inside the `input-div`.
  .input-div-content {
    width: fit-content;
    // Line height of input text.  This is required so that the "input" AKA div
    // does not change height when the input is hidden.
    height: 22px !important;
    line-height: 22px !important;

    > * {
      line-height: 22px;
      font-family: $avenir;
      font-weight: 500;
      font-size: 13px;
      letter-spacing: normal;
      padding-left: 2px;
      vertical-align: unset !important;
    }
  }
}

textarea {
  background-color: $gray-light !important;
  color: $text-secondary !important;
  font-family: $avenir !important;
  font-weight: 400;
  border-radius: 10px !important;
  border: 1px solid transparent !important;
  min-height: $standard-size !important;
  font-size: 12px;
}

.ant-input-number {
  .ant-input-number-handler-wrap {
    display: none !important;
  }
  .ant-input-number-input-wrap {
    height: 22px;
    input {
      height: 22px;
      padding: 0 !important;
    }
  }
}

.ant-select-multiple {
  .ant-select-selection-item {
    margin-top: 1px;
    margin-bottom: 1px;
  }
  .ant-select-selection-item-remove > .anticon {
    vertical-align: -0.1em;
  }
  .ant-select-selection-item-content {
    font-size: 11px;
    color: $text-primary;
    font-family: $roboto;
  }
}

// Must be outside of select because it does not render inside of select component.
.ant-select-item-option {
  &.column-select-option {
    .ant-select-item-option-content {
      display: flex;

      .icon-wrapper {
        @include size(22px);

        svg {
          @include size(12px);
        }
      }
    }
  }
  &.group-select-option {
    .ant-select-item-option-content {
      display: flex;

      .icon-wrapper {
        @include size(22px);

        .color {
          @include size(16px);
        }
      }
    }
  }
}

.select,
.ant-select {
  @extend .input-base;
  background-color: $white !important;
  @include standard_height("standard");

  &:not(.ant-select-disabled):hover .ant-select-selector {
    border-color: #ebebeb !important;
    border: 1px solid #ebebeb !important;
  }

  .ant-select-selector {
    @extend .input-base;
    @include input_framework(8px, 0.8rem, 12px, $standard-size, $input-border-radius, 1px);
    @include transition(none !important);
    height: 100%;
    background-color: $white !important;
    border-color: $border-color !important;
    border: $border !important;

    .ant-select-selection-overflow {
      height: 100%;

      .ant-select-selection-overflow-item {
        height: 100%;
      }
    }

    .ant-select-selection-item {
      font-weight: 500;
      height: 100%;
      margin-top: 0;
      margin-bottom: 0;
      padding-top: 1px;
      padding-bottom: 1px;
      line-height: 24px;
    }
  }

  &.ant-select-open .ant-select-arrow svg {
    color: $black;
  }
  &.disabled {
    background-color: $gray-light !important;
    .ant-select-selector {
      background-color: $gray-light !important;
    }
  }

  &--group {
    .group-select-tag {
      display: flex;
      line-height: 22px;

      .icon-wrapper {
        height: 22px;
        width: 22px;
        margin-right: -4px;

        .color {
          height: 12px;
          width: 12px;
        }
      }

      .ant-tag-close-icon {
        @include vertical-flex-c();
      }
    }
  }

  &--column {
    .column-select-tag {
      display: flex;
      line-height: 22px;

      .icon-wrapper {
        @include size(22px);
        margin-right: -4px;

        svg {
          @include size(12px);
        }
      }

      .ant-tag-close-icon {
        @include vertical-flex-c();
      }
    }
  }
}

.ant-select-item-option {
  color: $text-secondary;
  font-size: 13px;
  font-weight: 500;
  font-family: $avenir;
  min-height: $medium-size;
  height: $medium-size;

  .ant-select-item-option-selected:not(.ant-select-item-option-disabled) {
    color: $text-secondary;
    font-weight: 600;
    background-color: #e6f7ff;
  }
}

.date-picker {
  &.disabled {
    opacity: 0.3;
    pointer-events: none !important;
  }

  .react-datepicker__input-container {
    > input[type="text"] {
      @extend .input;
    }
  }

  .react-datepicker {
    @extend .menu-base;
    font-family: $avenir;
    box-shadow: none !important;
    border: $menu-border;
    padding: 10px !important;

    > .react-datepicker__triangle {
      display: none;
    }

    .react-datepicker__month-container {
      float: none;
    }

    .react-datepicker__header {
      background-color: $white;
      border-bottom: none;
      padding: 0 !important;

      .react-datepicker {
        &__current-month {
          font-weight: 500;
          color: $text-primary;
          font-size: 15px;
          line-height: 16px;
        }

        &__day-names {
          margin-bottom: 0;

          .react-datepicker__day-name {
            color: $gray;
            font-weight: 500;
            margin: 2px;
            font-size: 13px;
          }
        }
      }
    }

    .react-datepicker__day-name,
    .react-datepicker__day,
    .react-datepicker__time-name {
      margin: 2px;
    }

    .react-datepicker__navigation {
      top: -7px;

      .react-datepicker__year-read-view--down-arrow,
      .react-datepicker__month-read-view--down-arrow,
      .react-datepicker__month-year-read-view--down-arrow,
      .react-datepicker__navigation-icon::before {
        border-width: 2px 2px 0 0;
        border-color: $gray;
      }

      .react-datepicker__navigation--previous {
        left: 22px;
      }
      .react-datepicker__navigation--next {
        right: 22px;
      }
    }

    .react-datepicker__day {
      .react-datepicker__day--today {
        font-weight: normal;
      }
      .react-datepicker__day--selected {
        background-color: rgba($green, 0.2);
        color: $green;
        border-radius: 100%;
      }
    }

    .react-datepicker__month {
      margin: 0px;
    }

    .react-datepicker__day,
    .react-datepicker__month-text,
    .react-datepicker__quarter-text,
    .react-datepicker__year-text {
      border-radius: 100%;

      &:hover {
        border-radius: 100%;
      }
    }

    .react-datepicker__day--keyboard-selected {
      background-color: inherit;
      color: inherit;

      &:hover {
        background-color: #f0f0f0;
      }
    }
  }
}
