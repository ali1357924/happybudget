// This class is not meant to be used in the components.
.btn-link-base {
  font-size: 12px;
  letter-spacing: 0.028em;
  font-stretch: normal;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  align-items: center;
  user-select: none;
  vertical-align: middle;
  justify-content: center;

  &.no-transform {
    text-transform: unset;
  }
}

.icon-holder {
  min-width: 0px;
  box-shadow: none !important;
  border-radius: 100px;
  border: 1px solid $transparent;
  background-color: $transparent;
  padding: 0px;
  height: 36px;
  width: 36px;
  display: flex;
  flex-direction: column;
  justify-content: center;

  svg {
    height: 100%;
    width: auto !important;
    color: $icon-color !important;
  }

  &.small {
    padding: 10px;
  }
  &.medium {
    padding: 8px;
  }
  &.large {
    padding: 6px;
  }
}

.link {
  @extend .btn-link-base;
  color: $blue;
  font-family: $roboto;
  font-weight: 400;
  transition: none;
  box-shadow: none;
  background-color: transparent;
  padding: 0;
  border: none !important;

  .icon-wrapper {
    .icon {
      svg {
        color: $icon-color !important;
      }
    }
  }

  .icon {
    cursor: pointer;

    svg {
      color: $icon-color !important;
      height: 1.5rem;
      width: 1.5rem;
    }
  }

  &--black {
    color: $text-primary;
    text-transform: none !important;
  }

  &--inline {
    font-size: inherit !important;
  }

  &--icon-only {
    @extend .link;
    min-width: 0px;
    box-shadow: none !important;
    height: 28px;
    width: 28px;
    padding: 5px;
    border-radius: 100px;
    border: 1px solid transparent;
    display: flex;
    flex-direction: column;
    justify-content: center;

    svg {
      height: 18px;
      width: 18px;
      color: $icon-color;
    }

    &:hover,
    &.disabled,
    &.fake-disabled,
    &:disabled,
    &:focus {
      color: lighten($icon-color, 20%) !important;
      background-color: rgba(0, 0, 0, 0.015);

      svg {
        color: $blue !important;
      }
    }
  }

  // Links that are displayed immediately under a FormItem.  This is used in
  // the login/reset password pages.
  &--form-supplementary {
    color: #868686;
    font-family: $avenir;
    font-weight: 400;
    font-size: 14px;
    text-transform: unset !important;
    padding-left: 4px;

    &:hover,
    &:focus,
    &.disabled,
    &.fake-disabled,
    &:disabled {
      color: #cacaca !important;
    }
  }
}

.text-with-link {
  @extend .link;
  font-size: 12px;
  line-height: 14px;
  font-family: $roboto;
  font-weight: 400;
  transition: none;
  box-shadow: none;
  background-color: transparent;
  padding: 0;
  border: none !important;
  color: $text-secondary;

  .text-embedded-link {
    margin-left: 3px;
    color: $blue;

    &:hover,
    &:focus,
    &:disabled,
    &.fake-disabled,
    &.disabled {
      color: rgba($blue, 0.6);
    }
  }
}

.btn,
.ant-btn {
  @extend .btn-link-base;
  font-family: $avenir;
  letter-spacing: 0.01em;
  font-weight: 600;
  padding: 6px 12px;
  min-width: 80px;
  height: 36px;
  line-height: 24px;
  border-radius: 4px;
  margin: 0;
  display: inline-flex;
  outline: 0;
  background: $white;
  border-color: #d9d9d9;
  border-width: 1px;
  color: rgba(70, 70, 70, 0.6);
  box-sizing: border-box;
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.1);
  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);

  -moz-appearance: none;
  -webkit-appearance: none;
  -webkit-tap-highlight-color: transparent;

  .spinner {
    color: $green;
    height: 16px !important;
    width: 16px !important;
    aspect-ratio: 1;
    position: initial;
    margin-right: 8px;

    svg {
      height: 100% !important;
      width: auto !important;
    }
  }

  .icon {
    cursor: pointer;
    height: 16px !important;
    width: 16px !important;

    svg {
      height: 100% !important;
      width: auto !important;
      color: $icon-color !important;
    }
  }

  &--large {
    @extend .btn;
    font-size: 20px;
    line-height: 20px;
    padding-top: 12px;
    padding-bottom: 12px;
    height: auto;
    width: 230px;
    font-family: $avenir;
    text-transform: unset;
    font-weight: 600;
  }

  &--small {
    @extend .btn;
    font-size: 11px;
    line-height: 18px;
    padding: 6px 12px;
    height: 30px;
  }

  // A Button That Looks Like a <a> Link
  &--link {
    @extend .btn;
    color: $blue;
    transition: none;
    box-shadow: none;
    background-color: transparent;
    padding: 0;
    min-width: 0;
    text-decoration: none !important;
    height: auto;
    border: none !important;

    .ant-icon {
      color: $icon-color !important;
      cursor: pointer;
    }

    &:hover {
      background-color: transparent;
    }
  }

  &--default {
    @extend .btn;
    color: $text-secondary;
    background: #ececec;
    border-color: #ececec;

    &:hover,
    &:disabled,
    &.disabled,
    &.fake-disabled,
    &:focus {
      border-color: transparent !important;
      background-color: darken(#ececec, 10%) !important;
      color: $text-secondary !important;
    }
  }

  &--primary {
    @extend .btn;
    color: $white;
    background: $green;
    border-color: $green;

    &:hover,
    &.disabled,
    &.fake-disabled,
    &:disabled,
    &:focus {
      border-color: transparent !important;
      background-color: $green-darker !important;
      color: $white !important;
    }
  }

  &--danger {
    @extend .btn;
    color: $white;
    background: $red;
    border-color: $red;

    &:hover,
    &:focus,
    &.disabled,
    &.fake-disabled,
    &:disabled {
      color: $white;
      background: $red-hover;
      border-color: $red;
    }
  }

  &--icon-only {
    min-width: 0px;
    box-shadow: none !important;
    border-radius: 100px;
    border: 1px solid $transparent;
    background-color: $transparent;
    padding: 0px;
    height: 36px;
    width: 36px;
    display: flex;
    flex-direction: column;
    justify-content: center;

    // For whatever reason, applying the styling to the edit group button in
    // the AG Grid table is not respecting CSS inheritance rules and is not
    // allowing us to dynamically change the color unless this is unset.  We
    // should eventually figure that out, but for now - AG Grid is a pain.
    &:not(.btn--edit-group) {
      svg {
        color: $icon-color;
      }
      &:hover,
      &:focus {
        svg {
          color: lighten($icon-color, 20%) !important;
        }
      }
    }

    svg {
      height: 100%;
      width: auto !important;
    }

    &.small {
      padding: 10px;
    }
    &.medium {
      padding: 8px;
    }
    &.large {
      padding: 7px;
    }

    &:hover,
    &:disabled,
    &.disabled,
    &.fake-disabled,
    &:focus {
      border-color: $transparent !important;
      background-color: transparent;
      svg {
        color: lighten($icon-color, 20%) !important;
      }
    }

    &.green {
      svg {
        color: $green !important;
      }
      &:hover,
      &:focus {
        svg {
          color: $green-darker !important;
        }
      }
    }

    &.green-hover {
      &:hover,
      &:focus {
        svg {
          color: $green !important;
        }
      }
    }

    // The color of the button is set dynamically based on the group color.
    &--edit-group {
      &:hover {
        svg {
          color: #c7c7c7 !important;
        }
      }
    }

    &.ag-grid-expand-button {
      height: 26px;
      width: 26px;
      padding: 4px;
      display: flex;
      flex-direction: column;
      align-items: center;

      svg {
        height: 16px;
        width: auto !important;
        color: $green !important;
      }

      &:hover {
        background-color: rgba($green, 0.3);
      }

      &.disabled,
      &:disabled,
      &.fake-disabled {
        svg {
          color: $disabled-color !important;
        }
        &:hover {
          background-color: transparent !important;
        }
      }
    }
  }

  &--square {
    border-radius: 0px !important;
  }

  &--rounded {
    border-radius: 50px !important;
  }

  &--caret {
    background-color: $transparent;
    border: none;
    color: $icon-color;
    box-shadow: none;

    .caret-button-inner {
      display: flex;
      width: 100%;
      position: relative;

      .caret-button-text {
        font-family: $roboto;
        font-weight: 400;
        flex-grow: 100;
        text-align: center;
        margin-right: 10px;
      }
    }

    &:hover,
    &:disabled,
    &.disabled,
    &.fake-disabled,
    &:focus {
      border-color: transparent !important;
      background-color: $transparent !important;

      .caret-button-inner {
        .caret-button-text {
          color: lighten($icon-color, 20%);
        }
        .caret-button-caret {
          svg {
            color: lighten($icon-color, 20%);
          }
        }
      }
    }

    &.primary {
      color: $white;
      background: $green;
      border-color: $green;

      &:hover,
      &:disabled,
      &.disabled,
      &.fake-disabled,
      &:focus {
        background-color: $green-darker !important;
        .caret-button-inner {
          .caret-button-text {
            color: $white !important;
          }
          .caret-button-caret {
            svg {
              color: $white !important;
            }
          }
        }
      }
    }
  }

  .btn--clear {
    flex-direction: column;
    justify-content: center;

    svg {
      height: 14px;
      width: 14px;
      color: #d2d2d2 !important;
    }

    &:hover {
      svg {
        color: #a5a5a5 !important;
      }
    }
  }

  .btn--clear-image {
    flex-direction: column;
    justify-content: center;

    svg {
      height: 14px;
      width: 14px;
      color: $text-primary !important;
    }

    &:hover {
      svg {
        color: lighten($text-primary, 20%) !important;
      }
    }
  }

  &--login,
  &--reset {
    @extend .btn--large;
    background-color: $green;
    color: $white;
    border: 1px solid transparent;
    font-family: $avenir;
    font-weight: 600;

    .anticon-loading {
      color: $white !important;
    }

    &:hover,
    &:disabled,
    &.disabled,
    &.fake-disabled,
    &:focus {
      border-color: transparent !important;
      background-color: $green-darker !important;
      color: $white !important;
    }
  }

  &--clear,
  &--accept {
    @extend .btn;
    flex-direction: column;
    justify-content: center;

    svg {
      height: 14px;
      width: 14px;
      color: #d2d2d2 !important;
    }

    &:hover {
      svg {
        color: #a5a5a5 !important;
      }
    }
  }

  &--google {
    @extend .btn--large;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.1) !important;
    border-radius: 4px !important;
    width: 230px !important;
    text-transform: unset !important;
    font-weight: 600 !important;
    padding-top: 2px !important;
    padding-bottom: 2px !important;
    height: 48px;
    font-size: 14px;
    font-family: $avenir;

    &:hover,
    &:focus,
    &:disabled,
    &.fake-disabled,
    &.disabled {
      border-color: #d9d9d9 !important;
      box-shadow: none !important;
      color: rgba(70, 70, 70, 0.6) !important;
    }

    .content-wrapper {
      display: flex;
      margin: 0 auto;

      .icon-wrapper {
        padding: 13px;
        svg {
          top: 1px;
          position: relative;
          height: 18px;
          width: 18px;
        }
      }

      .text-wrapper {
        line-height: 49px;
      }
    }
  }

  &--simple-caret {
    border: none !important;
    box-shadow: none !important;
    min-width: 0px !important;
    padding-left: 0px !important;
    padding-right: 0px !important;
  }

  &--entity-text {
    border: none !important;
    box-shadow: none !important;
    min-width: 0px !important;
    padding-left: 0px !important;
    padding-right: 0px !important;

    .entity-text-button-inner {
      display: flex;
      .entity-text-button-caret {
        margin-left: 8px;
      }
    }
  }

  &--bare {
    font-weight: 600;
    border: none !important;
    box-shadow: none !important;
    color: $text-secondary;
    min-width: 0px;

    svg {
      height: 1.2rem !important;
      margin-right: 0.5rem;
      color: $text-secondary;
    }

    &:hover,
    &:focus {
      color: lighten($text-secondary, 20%) !important;
      border-color: $transparent !important;
      background-color: transparent;
      svg {
        color: lighten($text-secondary, 20%) !important;
      }
    }
  }

  &--budget-table-menu {
    padding: 6px 8px;
    line-height: 18px;
    height: 30px;

    svg {
      height: 1.2rem !important;
      margin-right: 0.5rem;
    }

    &:hover:not(:disabled):not(.disabled):not(.fake-disabled),
    &:focus:not(:disabled):not(.disabled):not(.fake-disabled) {
      color: $green !important;
      svg {
        color: $green !important;
      }
    }

    &:disabled,
    &.disabled,
    &.fake-disabled {
      color: $disabled-color !important;
      svg {
        color: $disabled-color !important;
      }
    }
  }
}
