.tag {
  border-radius: 20px;
  color: $white;
  font-family: $avenir;
  font-size: $medium-body-font-size;
  font-weight: 400;
  height: 20px;
  line-height: 20.5px;
  margin-right: 0.2rem;
  padding-bottom: 0px !important;
  padding-left: 8px;
  padding-right: 8px;
  padding-top: 0px !important;
  text-align: center;
  width: fit-content;

  &.uppercase {
    font-size: $small-body-font-size;
    text-transform: uppercase;
  }

  &.fill-width {
    text-align: center;
    width: 100%;
  }

  &--account {
    background-color: white !important;
    border: 1px solid $text-secondary !important;
    border-radius: 4px;
    color: $text-secondary !important;
    font-weight: 500;
    line-height: 18px;
  }

  &--contact {
    border-radius: 4px;

    &.focused {
      cursor: pointer;
    }
  }

  &--product {
    background-color: $gray-light !important;
    border-radius: 4px !important;
  }

  .btn {
    color: $blue !important;
    display: block;
    font-family: $avenir;
    font-size: $medium-body-font-size;
    font-weight: 400;
    height: 20px;
    line-height: 20.5px;

    &:hover,
    &:focus {
      color: $blue !important;
    }
  }
}

.multiple-tags-wrapper {
  display: flex;

  > .tag {
    &:hover {
      z-index: 1000;
    }
    // This needs to be applied more systematically, by looking at the overall width
    // of each tag.  It should also be done programatically.
    &:not(:first-child) {
      margin-left: -10px;
    }
  }
}

.color {
  @include vertical-flex-c;

  position: relative;
}

.color-grid {
  display: flex;
  flex-grow: 100;
  flex-wrap: wrap;
  padding: 6px;

  .color {
    margin-bottom: 12px;

    &:not(:last-child) {
      margin-right: 12px;
    }
  }

  // if the ColorGrid is wrapped, the Color(s) will be displayed up until the
  // right edge and then start on a new line.
  &.wrapped {
    margin-bottom: -12px !important;

    .color {
      flex: 1 1 24px;
      max-width: 24px;
    }
  }

  // If the ColorGrid is not wrapped, it will be displayed with a certain number
  // of colors per row.
  &:not(.wrapped) {
    flex-direction: column;

    .color-row {
      display: flex;
      flex-direction: row;

      .color {
        flex: 1 1;
      }

      &:last-child {
        .color {
          margin-bottom: 0px;
        }
      }
    }
  }
}
