{
  "env": {
    "commonjs": true,
    "es6": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier/@typescript-eslint",
    "plugin:prettier/recommended"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly",
    "JSX": "readonly"
  },
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "ignorePatterns": ["*.svg"],
  "rules": {
    // "prettier/prettier": "error",
    "no-global-assign": 2,
    "no-redeclare": "off", // Messes with function overloading.
    "no-shadow": 2,
    "no-restricted-globals": 2,
    "quotes": [
      1,
      "double"
    ],
    "semi": [
      1,
      "always"
    ],
    "no-tabs": ["error", {"allowIndentationTabs": true}],
    "no-unused-expressions": "warn",
    "no-multi-spaces": "warn",
    "no-trailing-spaces": "warn",
    "no-console": "off",
    "no-restricted-syntax": [
      "warn",
      {
        "selector": "CallExpression[callee.object.name='console'][callee.property.name!=/^(warn|error|info)$/]",
        "message": "This property on console is not allowed."
      }
    ],
    "no-eval": "warn",
    "object-curly-spacing": [
      1,
      "always"
    ],
    // This needs to be an error.
    "multiline-comment-style": [
      "warn",
      "bare-block"
    ],
    // This needs to eventually be an error.
    "max-len": [
      "warn",
      {
        "code": 120,
        "tabWidth": 2,
        "comments": 82,
        "ignoreRegExpLiterals": true,
        "ignorePattern": "^.*(eslint-disable|@ts-ignore).*"
      }
    ],
    // Note:  These non-typescript base rules have to be disabled as of TS
    // 4.0.0 in order to prevent false positives.  The no-undef lint rule does
    // not use TypeScript to determine the global variables that exist -
    // instead, it relies upon ESLint's configuration - so it is strongly
    // recommended that it be turned off since TS will handle it anyways.
    // https://github.com/typescript-eslint/typescript-eslint/blob/master/
    // docs/getting-started/linting/FAQ.md#i-get-errors-from-the-no-undef-
    // rule-about-global-variables-not-being-defined-even-though-there-are-no-typescript-errors
    "no-use-before-define": "off",
    "no-undef": "off",
    "@typescript-eslint/ban-ts-comment": ["off"],
    "@typescript-eslint/no-namespace": ["off"],
    "@typescript-eslint/no-use-before-define": ["error"],
    // Eventually, we want to turn the next two rules into warnings.
    "@typescript-eslint/explicit-module-boundary-types": ["off"],
    "@typescript-eslint/explicit-function-return-type": ["off"]
  }
}
